FROM alpine:3.8

ARG PHP_VERSION=5.6
ARG ATATUS_VERSION=1.15.1
ARG ATATUS_ENABLED=TRUE

ENV \
    # When using Composer, disable the warning about running commands as root/super user
    COMPOSER_ALLOW_SUPERUSER=1 \
    # Persistent runtime dependencies
    DEPS="php$PHP_VERSION \
        php$PHP_VERSION-phar \
        php$PHP_VERSION-bcmath \
        php$PHP_VERSION-calendar \
        php$PHP_VERSION-mbstring \
        php$PHP_VERSION-exif \
        php$PHP_VERSION-ftp \
        php$PHP_VERSION-openssl \
        php$PHP_VERSION-zip \
        php$PHP_VERSION-sysvsem \
        php$PHP_VERSION-sysvshm \
        php$PHP_VERSION-sysvmsg \
        php$PHP_VERSION-shmop \
        php$PHP_VERSION-sockets \
        php$PHP_VERSION-zlib \
        php$PHP_VERSION-bz2 \
        php$PHP_VERSION-curl \
        php$PHP_VERSION-simplexml \
        php$PHP_VERSION-xml \
        php$PHP_VERSION-opcache \
        php$PHP_VERSION-dom \
        php$PHP_VERSION-xmlreader \
        php$PHP_VERSION-xmlwriter \
        php$PHP_VERSION-tokenizer \
        php$PHP_VERSION-ctype \
        php$PHP_VERSION-gd \
        php$PHP_VERSION-gettext \
        php$PHP_VERSION-imagick \
        php$PHP_VERSION-intl \
        php$PHP_VERSION-ldap \
        php$PHP_VERSION-intl \
        php$PHP_VERSION-memcached \
        php$PHP_VERSION-mysqli \
        php$PHP_VERSION-mysqlnd \
        php$PHP_VERSION-pcntl \
        php$PHP_VERSION-pdo \
        php$PHP_VERSION-pdo_mysql \
        php$PHP_VERSION-pdo_sqlite \
        php$PHP_VERSION-redis \
        php$PHP_VERSION-soap \
        php$PHP_VERSION-sqlite3 \
        php$PHP_VERSION-tidy \
        php$PHP_VERSION-tokenizer \
        php$PHP_VERSION-wddx \
        php$PHP_VERSION-xsl \
        php$PHP_VERSION-session \
        php$PHP_VERSION-fileinfo \
        php$PHP_VERSION-iconv \
        php$PHP_VERSION-json \
        php$PHP_VERSION-posix \
        php$PHP_VERSION-xmlrpc \
        php$PHP_VERSION-fpm \
        php$PHP_VERSION-apcu \
        curl \
        ca-certificates \
        supervisor \
        bash \
        tzdata \
        openssl \
        wget \
        curl \
        bash"

# Install deps
RUN apk add --no-cache \
	curl \
    ca-certificates \
    supervisor \
    bash \
    tzdata \
    openssl \
    wget \
    curl \
    bash \
    fcgi \
    nano

RUN	apk add --no-cache \
  		php5 \
  		php5-common \
  		php5-curl \
  		php5-dom \
  		php5-exif \
  		php5-ftp \
  		php5-gd \
  		php5-iconv \
  		php5-mysqli \
  		php5-openssl \
  		php5-pdo \
  		php5-posix \
  		php5-soap \
  		php5-zip \
  		php5-ldap \
  		php5-bcmath \
  		php5-calendar \
  		php5-gettext \
  		php5-json \
  		php5-pcntl \
  		php5-apcu \
  		php5-phar \
  		php5-sockets \
  		php5-wddx \
  		php5-xmlreader \
  		php5-zip \
  		php5-zlib \
  		php5-xsl \
  		php5-opcache \
  		php5-ctype \ 
  		php5-pdo_mysql \ 
  		php5-pdo_sqlite \ 
  		php5-sqlite3 \ 
  		php5-intl \ 
  		php5-fpm \
  		php5-mcrypt \
  		php5-xmlrpc \
  		php5-mysqli \
  		php5-mysql

RUN	ln -snf /usr/bin/php5 /usr/bin/php && \
	ln -snf /usr/bin/php-fpm5 /usr/sbin/php-fpm


	# Symlink current version
RUN	mkdir /etc/php && \
	ln -snf /etc/php5 /etc/php/current

#Â Imagick
RUN apk add --no-cache autoconf php5-dev gcc make g++ zlib-dev wget imagemagick-dev && \
    mkdir /imagick && cd /imagick && \
    wget http://pecl.php.net/get/imagick-3.4.4.tgz && \
    tar xzf imagick-3.4.4.tgz && cd imagick-3.4.4 && \
    phpize5 && ./configure --prefix=/usr --with-php-config=php-config5 && \
    make && \
    cp modules/imagick.so /usr/lib/php5/modules/ && echo "extension=imagick.so" > /etc/php5/conf.d/imagick.ini && \
    apk del autoconf php5-dev gcc make g++ zlib-dev

RUN rm -rf /imagick
	
	# Imagick support file types
RUN	apk add --no-cache imagemagick
	
	# Add php5-redis
RUN	apk --no-cache add ca-certificates wget && \
	  wget --quiet --output-document=/etc/apk/keys/sgerrand.rsa.pub https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub && \
	  wget https://github.com/sgerrand/alpine-pkg-php5-redis/releases/download/3.1.6-r0/php5-redis-3.1.6-r0.apk && \
	  apk add php5-redis-3.1.6-r0.apk && \
	  rm -f php5-redis-3.1.6-r0.apk


# Composer
RUN EXPECTED_SIGNATURE="$(wget -q -O - https://composer.github.io/installer.sig)" && \
    php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');" && \
    ACTUAL_SIGNATURE="$(php -r "echo hash_file('sha384', 'composer-setup.php');")" && \
    if [ "$EXPECTED_SIGNATURE" != "$ACTUAL_SIGNATURE" ]; \
    then \
        >&2 echo 'ERROR: Invalid installer signature' \
        rm composer-setup.php \
    exit 1; \
    fi && \
    php composer-setup.php --quiet --install-dir=/usr/local/bin --filename=composer --version=1.10.17 && \
    RESULT=$? && \
    rm composer-setup.php && \
    exit $RESULT

RUN if [ "$ATATUS_ENABLED" == "TRUE" ]; then \
	# Atatus
	wget https://s3.amazonaws.com/atatus-artifacts/atatus-php/downloads/atatus-php-$ATATUS_VERSION-x64-musl.tar.gz && tar -xzvf atatus-php-$ATATUS_VERSION-x64-musl.tar.gz && cd atatus-php-$ATATUS_VERSION-x64-musl && ./install.sh && rm -f /atatus-php-$ATATUS_VERSION-x64-musl.tar.gz && rm -rf /atatus-php-$ATATUS_VERSION-x64-musl && \
	sed -i -e 's#atatus.trace.response_time = 2000#atatus.trace.response_time = 1500#g' /etc/php/current/conf.d/atatus.ini && \
	  sed -i -e 's#atatus.collector.pidfile = "/var/run/atatus-php-collector.pid"#atatus.collector.pidfile = "/run/atatus-php-collector.pid"#g' /etc/php/current/conf.d/atatus.ini && \
	  sed -i -e 's#atatus.collector.connection = "/tmp/.atatus.sock"#atatus.collector.connection = "/run/atatus.sock"#g' /etc/php/current/conf.d/atatus.ini && \
	# Write log files to stdout
	rm -f /var/log/atatus/agent.log && rm -f /var/log/atatus/collector.log && rm -f /var/log/atatus/debug.txt && ln -sf /dev/null /var/log/atatus/agent.log && ln -sf /dev/null /var/log/atatus/collector.log && ln -sf /dev/null /var/log/atatus/debug.txt; \
	fi

# PHP Config
ADD /php/conf/php-fpm.conf /etc/php/current/php-fpm.conf
ADD /php/conf/php.ini /etc/php/current/php.ini
ADD /php/conf/php-www.conf /etc/php/current/php-fpm.d/www.conf

# Root CA override
ADD /php/conf/root.cer /etc/root-ca/root.cer
RUN sed -i -e 's#;curl.cainfo =#curl.cainfo="/etc/root-ca/root.cer"#g' /etc/php5/php.ini
RUN sed -i -e 's#;openssl.cafile=#openssl.cafile="/etc/root-ca/root.cer"#g' /etc/php5/php.ini

# Clear out garbage
RUN unset DEPS && rm -rf /run/php && rm -rf /run/php-fpm7.3

# Start script
ADD /php/scripts/start.sh /start.sh
RUN chmod +x /start.sh

# Start cron script
ADD /php/scripts/start-cron.sh /start-cron.sh
RUN chmod +x /start-cron.sh

# Start worker script
ADD /php/scripts/start-worker.sh /start-worker.sh
RUN chmod +x /start-worker.sh

# Configure script
ADD /php/scripts/configure.sh /configure.sh
RUN chmod +x /configure.sh

# Healthcheck script
ADD /php/scripts/healthcheck.sh /healthcheck.sh
RUN chmod +x /healthcheck.sh

CMD ["/start.sh"]
